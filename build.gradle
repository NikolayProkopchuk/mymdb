plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
}

group = 'com.prokopchuk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    postgresqlVersion = '42.5.0'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

checkstyle {
    toolVersion "${checkstyle}"
    configFile file("${project.rootDir}/src/main/resources/config/checkstyle.xml")
    ignoreFailures = false
    maxWarnings = 0
    toolVersion = '10.3.1'
}

checkstyleMain {
    print "${project.rootDir}"
    enabled = gradle.startParameter.taskNames.contains('checkstyleMain')
    source = 'src/main/java'
}

checkstyleTest {
    enabled = gradle.startParameter.taskNames.contains('checkstyleTest')
    source = 'src/test/java'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it)
        }))
    }
}